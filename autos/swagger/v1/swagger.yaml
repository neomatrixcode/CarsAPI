---
openapi: 3.0.1
info:
  title: Nexu Backend API
  version: v1
  description: API for managing car brands and models
paths:
  "/brands":
    get:
      summary: Lists all brands with pagination
      tags:
      - Brands
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number (default: 1)'
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 10)'
        schema:
          type: integer
      responses:
        '200':
          description: brands found
          content:
            application/json:
              schema:
                type: object
                properties:
                  brands:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        nombre:
                          type: string
                        average_price:
                          type: integer
                      required:
                      - id
                      - nombre
                      - average_price
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      per_page:
                        type: integer
                      total_count:
                        type: integer
                      total_pages:
                        type: integer
                    required:
                    - current_page
                    - per_page
                    - total_count
                    - total_pages
                required:
                - brands
                - meta
    post:
      summary: Creates a brand
      tags:
      - Brands
      parameters: []
      responses:
        '201':
          description: brand created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/brands/{id}/models":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Lists all models for a brand with pagination
      tags:
      - Brands
      - Models
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number (default: 1)'
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 10)'
        schema:
          type: integer
      responses:
        '200':
          description: models found
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        average_price:
                          type: integer
                      required:
                      - id
                      - name
                      - average_price
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      per_page:
                        type: integer
                      total_count:
                        type: integer
                      total_pages:
                        type: integer
                    required:
                    - current_page
                    - per_page
                    - total_count
                    - total_pages
                required:
                - models
                - meta
        '404':
          description: brand not found
    post:
      summary: Creates a model for a brand
      tags:
      - Brands
      - Models
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: model created
        '422':
          description: invalid request
        '404':
          description: brand not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                average_price:
                  type: integer
              required:
              - name
  "/models":
    get:
      summary: Lists all models with optional filtering and pagination
      tags:
      - Models
      parameters:
      - name: greater
        in: query
        required: false
        description: Filter models with average_price greater than this value
        schema:
          type: integer
      - name: lower
        in: query
        required: false
        description: Filter models with average_price lower than this value
        schema:
          type: integer
      - name: page
        in: query
        required: false
        description: 'Page number (default: 1)'
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 10)'
        schema:
          type: integer
      responses:
        '200':
          description: models found
          content:
            application/json:
              schema:
                type: object
                properties:
                  models:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        average_price:
                          type: integer
                      required:
                      - id
                      - name
                      - average_price
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      per_page:
                        type: integer
                      total_count:
                        type: integer
                      total_pages:
                        type: integer
                    required:
                    - current_page
                    - per_page
                    - total_count
                    - total_pages
                required:
                - models
                - meta
  "/models/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    put:
      summary: Updates a model
      tags:
      - Models
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: model updated
        '422':
          description: invalid request
        '404':
          description: model not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                average_price:
                  type: integer
              required:
              - average_price
servers:
- url: http://localhost:5000
  description: Development server
- url: http://neomatrix.ddns.net:5000
  description: Deployment server
components:
  schemas:
    brand:
      type: object
      properties:
        id:
          type: integer
        nombre:
          type: string
        average_price:
          type: integer
      required:
      - id
      - nombre
      - average_price
    model:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        average_price:
          type: integer
      required:
      - id
      - name
      - average_price
